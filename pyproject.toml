[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "ellar"


[project]
name = "ellar"
authors = [
   {name = "Ezeudoh Tochukwu", email = "tochukwu.ezeudoh@gmail.com"},
]
dynamic = ["version", "description"]
requires-python = ">=3.7"
readme = "README.md"
home-page = "https://github.com/eadwinCode/ellar"
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Framework :: AsyncIO",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]

dependencies = [
    "injector == 0.21.0",
    "starlette == 0.31.1",
    "pydantic >=2.0",
    "jinja2",
    # cli
    "typer >=0.6.1,<0.10.0",
    # testing
    "httpx >= 0.22.0",
    "passlib >= 1.7.4"
]

[project.urls]
Documentation = "https://github.com/eadwinCode/ellar"
Source = "https://github.com/eadwinCode/ellar"
Homepage = "https://eadwincode.github.io/ellar/"

[project.optional-dependencies]
test = [
    "pytest >= 6.2.4,<8.0.0",
    "pytest-cov >= 2.12.0,<5.0.0",
    "black ==23.10.1",
    "mypy == 1.6.1",
    "ruff ==0.1.4",
    "pytest-asyncio",
    "databases[sqlite] >= 0.3.2",
    "orjson >= 3.2.1",
    "ujson >= 4.0.1",
    "python-multipart >= 0.0.5",
    "anyio[trio] >= 3.2.1",
    "autoflake",
    "email_validator >=1.1.1",
    "pylibmc",
    "pymemcache",
    "aiomcache",
    "redis",
    "itsdangerous >=1.1.0,<3.0.0",
    # types
    "types-ujson ==5.8.0.1",
    "types-orjson ==3.6.2",
    "types-redis ==4.6.0.8",
    "types-dataclasses ==0.6.6",
    "python-socketio",
    "uvicorn[standard] == 0.23.2",
    "aiohttp == 3.8.5",
    "argon2-cffi == 23.1.0"
]
dev = [
    "pre-commit"
]

all = [
    "python-multipart >=0.0.5,<0.0.7",
    "itsdangerous >=1.1.0,<3.0.0",
    "pyyaml >=5.3.1,<7.0.0",
    "ujson >=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0,<6.0.0",
    "orjson >=3.2.1,<4.0.0",
    "email_validator >=1.1.1,<3.0.0",
]
doc = [
    "mkdocs >=1.1.2,<2.0.0",
    "mkdocs-material >=7.1.9,<10.0.0",
    "mdx-include >=1.4.1,<2.0.0",
    "mkdocs-markdownextradata-plugin >=0.1.7,<0.3.0",
    "markdown-include",
    "mkdocstrings",
    "mkdocs-minify-plugin",
    "mkdocs-git-revision-date-localized-plugin"
]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["ellar", "pydantic", "starlette"]
[tool.mypy]

show_column_numbers = true

follow_imports = 'normal'
ignore_missing_imports = true

# be strict
disallow_untyped_calls = true
warn_return_any = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_ignores = true

disallow_untyped_defs = true
check_untyped_defs = true
implicit_reexport = false

[[tool.mypy.overrides]]
module = "ellar.common.compatible.*"
ignore_errors = true
[[tool.mypy.overrides]]
module = "ellar.core.services.*"
ignore_errors = true
[[tool.mypy.overrides]]
module = "ellar.samples.*"
ignore_errors = true
